{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Container/Container.js","components/Layout/Layout.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Container","children","Layout","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","useState","contactName","setContactName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","find","alert","text","a","post","data","addContact","className","styles","form","label","input","type","pattern","title","onChange","required","button","Filter","e","target","ContactList","useEffect","get","list","map","id","item","onClick","delete","deleteContact","App","section","createReducer","_","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac30c4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1U5Ab\",\"item\":\"ContactList_item__112Vl\",\"button\":\"ContactList_button__36VAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2jW5c\",\"label\":\"Filter_label__kCTIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__OV1-l\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Container = ({ children }) => {\r\n    return <div >{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '../Container/Container';\r\n\r\n\r\n\r\nconst Layout = ({ children }) => (\r\n    <>\r\n        <Container  >{children}</Container>\r\n    </>\r\n);\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n    'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n    'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n    'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n    'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/filter');","\r\nimport axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    }\r\n};\r\n\r\nexport const addContact = (text, number) => async dispatch => {\r\n    const contact = {\r\n        name: text,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(addContactError(error));\r\n    }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    try {\r\n        await axios.delete(`contacts/${id}`);\r\n        dispatch(deleteContactSuccess(id));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error));\r\n    }\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);","\r\nimport { useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Form.module.css'\r\n\r\n\r\n\r\nexport default function Form() {\r\n    const [contactName, setContactName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setContactName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const isExistedName = contacts.find(\r\n            contact => contact.name.toLowerCase() === contactName.toLowerCase(),\r\n        );\r\n\r\n        if (isExistedName) {\r\n            alert(contactName + ' is already in your contacts');\r\n            return;\r\n        }\r\n\r\n        dispatch(addContact(contactName, number));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setContactName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit} className={styles.form}>\r\n            <label className={styles.label}>\r\n                Name\r\n                <input\r\nclassName={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={contactName}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={styles.label}>\r\n                Phone Number\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <button  type=\"submit\" className={styles.button}>\r\n                Add Contact\r\n            </button>\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { filterContact } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Filter.module.css'\r\n\r\n\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <label className={styles.label}>\r\n\r\n            <input\r\nclassName={styles.input}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={e => dispatch(filterContact(e.target.value))}\r\n            />\r\n        </label>\r\n    );\r\n}","\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './ContactList.module.css'\r\n\r\nimport {\r\n    fetchContacts,\r\n    deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\n\r\nexport default function ContactList() {\r\n    const contacts = useSelector(getFilteredContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ol className={styles.list}>\r\n            {contacts.map(({ id, name, number }) => {\r\n                return (\r\n                    <li key={id} className={styles.item}>\r\n                        {name}: <span >{number}</span>\r\n                        <button\r\n                            type=\"button\"\r\nclassName={styles.button}\r\n                            onClick={() => dispatch(deleteContact(id))}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ol>\r\n    );\r\n}","\nimport Layout from './components/Layout/Layout';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './App.module.css'\n\nexport default function App() {\n    return (\n        <Layout >\n            <div className={styles.section}>\n            <h1 >PhoneBook</h1>\n            <Form />\n\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n            </div>\n        </Layout>\n    );\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n    fetchContactsSuccess,\r\n    addContactSuccess,\r\n    deleteContactSuccess,\r\n    filterContact,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, action) => action.payload,\r\n    [addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [deleteContactSuccess]: (state, action) =>\r\n        state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducers';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware(),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={store.persistor}> */}\n            <App />\n            {/* </PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ahP_1\",\"label\":\"Form_label__1dWll\",\"input\":\"Form_input__3w0Yc\",\"button\":\"Form_button__3Qxzq\"};"],"sourceRoot":""}